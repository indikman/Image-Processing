/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package imageshop;

import java.awt.Graphics;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

/**
 *
 * @author Indika
 */
public class ImageShow extends javax.swing.JFrame {

    /**
     * Creates new form ImageShow
     */
    Logger logger = Logger.getForm();
    
    private String ImageName;
    private BufferedImage image;
    private BufferedImage tempImage;
    
    //returning the image file
    public BufferedImage getImage(){
        return this.image;
    }
    
    public void setImageName(String name){
        this.setTitle(name);
    }
    
    public String getImageName(){
        return  ImageName;
    }
    
    public ImageShow(String ImageName){
        initComponents();
        this.setLocationRelativeTo(null);
        this.ImageName = ImageName;
        ToolBox.setCurrentImage(image);
    }
  
    public ImageShow(File file){
        initComponents();
        this.setLocationRelativeTo(null);
        try {
            System.out.println("Image opening");
            image = ImageIO.read(file);
            System.out.println(file.getName());
            
            this.setTitle(file.getName());
            this.setSize(this.getWidth(), image.getHeight()+100);
            imagePanel.setIcon(new ImageIcon(image));
            ToolBox.setCurrentImage(image);
        } catch (Exception e) {
            logger.log("Error in opening the Image");
        }
    }
    
    public ImageShow(BufferedImage image, String title){
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle(title);
        
        imagePanel.setIcon(new ImageIcon(image));
        ToolBox.setCurrentImage(image);
        this.image = image;
    }
    
    
    
    ///----------- Singleton----------------\\\\
    public static ImageShow obj = null;
    public static ImageShow getFrame(String ImageName){
        if(obj==null)
            obj = new ImageShow(ImageName);
        return obj;
    }
    
    //------ methods--------------------------\\\\\
    
    public void setImage(BufferedImage getImage){
        //getting the image from outside and setting it as this image
        this.image = getImage;
        imagePanel.setIcon(new ImageIcon(image));
        ToolBox.setCurrentImage(image);
    }
    
    // opening image from file
    public void openImage(File file)
    {
        try {
            image = ImageIO.read(file);
            imagePanel.setIcon(new ImageIcon(image));
        } catch (Exception e) {
            logger.log("Error in opening the Image");
        }
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        imagePanel = new javax.swing.JLabel();
        panelSettings = new javax.swing.JPanel();
        scaleSlider = new javax.swing.JSlider();
        btnHisto = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        comboType = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 51));
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });

        imagePanel.setBackground(new java.awt.Color(204, 204, 204));
        imagePanel.setForeground(new java.awt.Color(204, 204, 204));
        imagePanel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jScrollPane1.setViewportView(imagePanel);

        scaleSlider.setMajorTickSpacing(10);
        scaleSlider.setMinorTickSpacing(2);
        scaleSlider.setPaintTicks(true);
        scaleSlider.setValue(100);

        btnHisto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imageshop/histogram.png"))); // NOI18N
        btnHisto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHistoActionPerformed(evt);
            }
        });

        jButton2.setText("jButton2");

        comboType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Bi-Cubic", "Bi-Linear", "Nearest" }));

        jButton1.setText("Reset");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Apply");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setText("Image Resample");

        javax.swing.GroupLayout panelSettingsLayout = new javax.swing.GroupLayout(panelSettings);
        panelSettings.setLayout(panelSettingsLayout);
        panelSettingsLayout.setHorizontalGroup(
            panelSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSettingsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(scaleSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSettingsLayout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addComponent(comboType, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 122, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnHisto, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelSettingsLayout.setVerticalGroup(
            panelSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSettingsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnHisto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelSettingsLayout.createSequentialGroup()
                        .addComponent(comboType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panelSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton3))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSettingsLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scaleSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(panelSettings, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelSettings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        ToolBox.setCurrentImage(image);      
// TODO add your handling code here:
    }//GEN-LAST:event_formFocusGained

    private void btnHistoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHistoActionPerformed
        // TODO add your handling code here:
        Histogram histogram = Histogram.getForm();
        histogram.setImage((BufferedImage) ((ImageIcon)imagePanel.getIcon()).getImage());
        
        
        histogram.generateHistogram("");
        histogram.setVisible(true);
    }//GEN-LAST:event_btnHistoActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        ImageShopEffects effects = new ImageShopEffects();
        
       tempImage = new BufferedImage(image.getWidth(), image.getHeight(), image.getType());
       tempImage.setData(image.getData());
       
        float scaleFactor = (float)scaleSlider.getValue()/100;
        System.out.println(scaleFactor);
        
        
        int scaledWidth = Math.round(image.getWidth()*scaleFactor);
        int scaleHeight = Math.round(image.getHeight()*scaleFactor);
        System.out.println(scaleHeight + " " + scaledWidth);
         
        BufferedImage scaled = null;
        if(comboType.getSelectedIndex()==0){
            scaled = effects.getScaledInstance(image, scaledWidth, scaleHeight, RenderingHints.VALUE_INTERPOLATION_BILINEAR, true);
        }else if(comboType.getSelectedIndex()==1){
            scaled = effects.getScaledInstance(image, scaledWidth, scaleHeight, RenderingHints.VALUE_INTERPOLATION_BILINEAR, true);
        }else if(comboType.getSelectedIndex()==2){
            scaled = effects.getScaledInstance(image, scaledWidth, scaleHeight, RenderingHints.VALUE_INTERPOLATION_BILINEAR, true);
        }
        
        imagePanel.setIcon(new ImageIcon(scaled));
        ToolBox.setCurrentImage(scaled);
        this.image = scaled;
        
        scaleSlider.setValue(100);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        imagePanel.setIcon(new ImageIcon(tempImage));
        ToolBox.setCurrentImage(tempImage);
        this.image = tempImage;
        
        scaleSlider.setValue(100);
    }//GEN-LAST:event_jButton1ActionPerformed

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHisto;
    private javax.swing.JComboBox comboType;
    private javax.swing.JLabel imagePanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelSettings;
    private javax.swing.JSlider scaleSlider;
    // End of variables declaration//GEN-END:variables
}
